---
ID: "7e1abaeb-8fa6-4d56-bc82-69835a159f96"
Parent: "64f922b1-d57d-4afa-ae26-9d59502f69a6"
Template: "14807d83-9671-4d70-b0f4-f54012f2bfb8"
Path: "/sitecore/content/Habitat Sites/Habitat Home/home/guides/android-to-arduino"
DB: master
SharedFields:
- ID: "4d71857f-c77d-44fa-8899-c671a0458d7f"
  Hint: Publish Date
  Value: 20171129T184100Z
- ID: "7bd35dcd-61bb-42e0-8bf5-07803af6eede"
  Hint: Author
  Value: "{B3079C34-42F0-447A-AB31-749425882F89}"
- ID: "97fb669d-5b8e-4829-9a24-06418c315d73"
  Hint: SxaTags
  Value: "{7411018E-699A-4E78-B919-73349ECC6D0D}"
- ID: "a4f985d9-98b3-4b52-aaaf-4344f6e747c6"
  Hint: __Workflow
  Value: "{C6EBE5E6-BCE3-4BAB-A5F9-16382F8369FE}"
- ID: "b0a67b2a-8b07-4e0b-8809-69f751709806"
  Hint: __Tracking
  Type: Tracking
  Value: |
    <tracking>
      <profile
        id="54d63273-947a-4927-b21a-0022625315e1"
        name="Electronics Category"
        presets="phones|100||">
        <key
          name="Appliances"
          value="0" />
        <key
          name="Audio"
          value="0" />
        <key
          name="Cameras"
          value="0" />
        <key
          name="Computers"
          value="0" />
        <key
          name="Fitness Tech"
          value="0" />
        <key
          name="Games"
          value="0" />
        <key
          name="Phones"
          value="10" />
        <key
          name="Tablets"
          value="0" />
        <key
          name="TVs"
          value="0" />
      </profile>
      <profile
        id="552dd90f-a527-438e-ac33-32d236244123"
        name="Topic Interest Category"
        presets="smart and connected|100||">
        <key
          name="Child Safety"
          value="0" />
        <key
          name="Energy Savings"
          value="0" />
        <key
          name="Newest and Coolest"
          value="0" />
        <key
          name="Overclocking"
          value="0" />
        <key
          name="Reliability"
          value="0" />
        <key
          name="Smart and Connected"
          value="10" />
      </profile>
    </tracking>
- ID: "f1a1fe9e-a60c-4ddb-a3a0-bb5b29fe732e"
  Hint: __Renderings
  Type: layout
  Value: |
    <r xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <d
        id="{FE5D7FDF-89C0-4D99-9AA3-B5FBD009C9F3}"
        l="{BCFC7537-EFF4-434C-96F5-BF4F55FD175B}">
        <r
          id="{0FA50A16-13DF-4722-9357-C7D157638ACA}"
          par="GridParameters=%7B113BEF7C-97E6-46CA-8CF3-916F7FAA8DE2%7D&amp;FieldNames&amp;Styles&amp;Reset Caching Options&amp;RenderingIdentifier&amp;DynamicPlaceholderId=2"
          ph="/main/sxa-article-content/author-1-"
          uid="{F79BC40E-8D52-49D8-A5C0-D1F51CF24192}" />
        <r
          ds="{7128D032-83F5-48CF-A27A-59A6AB00E982}"
          id="{00E2C7CF-2247-4596-B878-E6BB3850A77F}"
          par="GridParameters=%7B113BEF7C-97E6-46CA-8CF3-916F7FAA8DE2%7D&amp;Styles&amp;Reset Caching Options&amp;RenderingIdentifier&amp;DynamicPlaceholderId=1"
          ph="/main/sxa-article-content/container-1"
          uid="{A48E7764-4E03-4FE7-A8E1-BFC5DA7FD2B6}" />
      </d>
      <d
        id="{0B4A31C9-712D-4578-A396-2DDC0F34B63A}"
        l="{72C595AD-68BB-44BC-B5CD-2A857039515F}" />
    </r>
Languages:
- Language: en
  Fields:
  - ID: "b5e02ad9-d56f-4c41-a065-a133db87bdeb"
    Hint: __Display name
    Value: Android to Arduino
  Versions:
  - Version: 1
    Fields:
    - ID: "23aa5741-fa6a-4add-9e79-7a752af6deb1"
      Hint: Image
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20171128T223238Z
    - ID: "48a66e40-d164-4c8e-bc06-172ecc6769ec"
      Hint: TwitterTitle
      Value: Home Automation with Android and Arduino
    - ID: "4d263b95-322f-4003-adbd-70920facf823"
      Hint: TwitterDescription
      Value: Learn the basics behind a  home automation set up with our Android to Arduino guide.
    - ID: "4e0720e9-9d50-4ddc-87cf-ecd65e8e94c8"
      Hint: NavigationTitle
      Value: Android to Arduino
    - ID: "528986cc-6ff9-4383-8bee-514f0e8172cf"
      Hint: MetaDescription
      Value: Our DIY smart home automation project outlined in this article will show you how to automate your home using an Android smartphone and Arduino. 
    - ID: "5a0b08e5-7f6c-48dc-929a-5d6cfda45e1d"
      Hint: Content
      Value: |
        <div><span style="font-size: 20px;">Have you always dreamed of automating your home? Do you want to control the lights, fans, and appliances from your smartphone? Perhaps you just want a tutorial about connected devices and getting started with them? Our DIY home automation project outlined in this article will show you how to automate your home using an Android smartphone and Arduino. This requires no experience with Android programming. This system uses Bluetooth to </span>connect to<span style="font-size: 20px;"> your device and control the various appliances in your home. Have fun with this home automation hacking tutorial.</span><br /></div><div><br /></div><div><b>Required Materials</b></div><div><span style="font-size: 20px;">Hardware:</span><br /></div><div>Arduino / Arduino Clone</div><div>A 5v TTL -UART Bluetooth module like: JY-MCU BT_BOARD or Bluesmirf Gold/Silver.</div><div>Five 5V SPDT relays like: 5V relay.</div><div>Prototype board or breadboard.</div><div>Connecting wires.</div><div><br /></div><div>Software:</div><div>Arduino IDE</div><div>Eclipse for Android programming (optional, not required).</div><div><br /></div><div><b>How Does it Work?</b></div><div><span style="font-size: 20px;">Our Android to Arduino home automation project comes with a free application called “DIY SmartHome.” This application controls the various appliances connected to your Arduino and relays. When the toggle buttons on the application are pressed, corresponding Bluetooth signals are sent from your Android phone to the Bluetooth module you have hooked up to your Arduino. The Arduino finds out which signal was sent and compares it to the predefined signals assigned for each appliance. When it identifies that signal, the Arduino activates the relay hooked up to its digital pin by passing 5V through it. Thus the relay is switched ON and the corresponding appliance connected to the relay is turned ON as well. To switch it OFF, Arduino passes a 0V or logic low to its digital pin.</span><br /></div><div><br /></div><div>For setting up this system, wiring connections have to be made between the Arduino and Bluetooth module and also with the relays. Here, the Bluetooth Module’s Tx is connected to Arduino Rx (digital pin 0) and the module’s Rx to Arduino Tx (digital pin 1). 5V and GND of the module are connected to the Arduino’s 5V and GND.</div><div><br /></div><div>The relay you're using is SPDT; it has 5 pins on the underside. Pins 1 and 3 are the coil pins. Pin 1 is connected to the Arduino digital pin and pin 3 is connected to Arduino GND. Pin 2 is the common contact in the relay to which you have to connect the power for your appliance (AC 230V), and pin 4 is the pin to which you have to connect your appliance wire.</div><div><br /></div><div>In a normal SPDT relay, whose pin out is shown in the above step, pins 2 and 4 act identical to the two terminals of a switch. When a digital HIGH voltage is applied from the Arduino to the relay, the switch turns ON, when the voltage is withdrawn, it turns OFF. You can attach this system you made to a normal switchboard by extending the wires from behind the switches in the board to your relay. As seen in the connection diagram in the above step, you have to connect a power AC line to the common terminal of all the relays. Then, you have to extend the wires from behind the switchboard of the corresponding lights/lamps you wish to control. Each of these wires is connected to the “NO”(Normally Open) terminal of the relays. NOTE: If you wish to control door locks, you may use door lock solenoids, which can be purchased and connected to your system and turned ON/OFF using the same way.&nbsp;</div><div><br /></div><div><b>Loading the Arduino Software</b></div><div><span style="font-size: 20px;">If you are new to Arduino, download the Arduino IDE (Integrated Development Environment) from Arduino. The code is really simple: here it checks the incoming Bluetooth signal via the Bluetooth module and then compares using an “if” statement with previously defined values. If it matches the value, the relay is activated using the “digitalWrite(</span>pin,HIGH<span style="font-size: 20px;">)” command, which passes 5V to the Arduino digital pin. Then, upload the code to your Arduino board.</span><br /></div><div><br /></div><div><b>Discovering New Bluetooth Devices</b></div><div><span style="font-size: 20px;">To download the android application to your phone, copy this .apk file to your phone from the PC and then click on it from the phone to install it. Be sure to check “Allow installation of non-Market apps” in the Security tab under settings. Once you have installed the application, before opening it you need to pair and connect to your Bluetooth module. For this, you need to power the Arduino and Bluetooth module and then turn ON the Bluetooth of your phone and make it visible to other devices. After that, search for new devices in Bluetooth, select your Bluetooth module from the list, enter the pairing code when prompted, it is usually '1234'&nbsp; or '0000'.</span><br /></div><div><br /></div><div>Note the name of your device, in this case, it is HC-06. After pairing with the system, go to the application and enter the name of your Bluetooth module you noted earlier (case-sensitive). After that, the phone will connect to your system, and by clicking the respective buttons, the appliances turn ON/OFF. Have fun with your new Android to Arduino home automation set up.</div>
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\admin
    - ID: "5e650555-c7f0-456a-8185-f69388169cbc"
      Hint: MetaKeywords
      Value: android to arduino, home automation, diy automation, beginner arduino, smart home, bluetooth, connected devices
    - ID: "7bddc8b8-1f77-46d8-9d7f-46e20e041f74"
      Hint: OpenGraphDescription
      Value: Our DIY smart home automation project outlined in this article will show you how to automate your home using an Android smartphone and Arduino. 
    - ID: "7d988161-3991-465a-a88c-280bc65542a0"
      Hint: OpenGraphTitle
      Value: Home Automation with Android and Arduino
    - ID: "ca65aca5-4323-418a-aa72-a5037f606d2a"
      Hint: Introduction
      Value: "<p>Have you always dreamed of automating your home? Do you want to control the lights, fans, and appliances from your smartphone?Our DIY home automation project outlined in this article will show you how to automate your home using an Android smartphone and Arduino.&nbsp;</p>"
    - ID: "d8b38dd7-e9a0-4410-9f17-d436b0c8635a"
      Hint: OpenGraphImageUrl
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "de457091-0989-414e-addf-59db0ddb6690"
      Hint: TwitterImage
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "e2a634fd-5177-46de-b629-5393caed77d7"
      Hint: Title
      Value: Home Automation with Android and Arduino
- Language: "fr-CA"
  Fields:
  - ID: "41c6cc0e-389f-4d51-9990-fe35417b6666"
    Hint: __Preview
    Value: 
  - ID: "577f1689-7de4-4ad2-a15f-7fdc1759285f"
    Hint: __Long description
    Value: 
  - ID: "9541e67d-ce8c-4225-803d-33f7f29f09ef"
    Hint: __Short description
    Value: 
  - ID: "b5e02ad9-d56f-4c41-a065-a133db87bdeb"
    Hint: __Display name
    Value: Android to Arduino
  Versions:
  - Version: 1
    Fields:
    - ID: "04bf00db-f5fb-41f7-8ab7-22408372a981"
      Hint: __Final Renderings
      Type: Layout
      Value: |
        <r xmlns:p="p" xmlns:s="s"
          p:p="1">
          <d
            id="{FE5D7FDF-89C0-4D99-9AA3-B5FBD009C9F3}">
            <r
              uid="{E2DDD6DC-4AC9-438A-915B-0A02C6DD9781}"
              s:par="Caching=0%7c0%7c0%7c0%7c0%7c0%7c0%7c0&amp;DynamicPlaceholderId=1" />
          </d>
        </r>
    - ID: "23aa5741-fa6a-4add-9e79-7a752af6deb1"
      Hint: Image
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "24171bf1-c0e1-480e-be76-4c0a1876f916"
      Hint: Page Design
      Value: 
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20171128T223238Z
    - ID: "3e431de1-525e-47a3-b6b0-1ccbec3a8c98"
      Hint: __Workflow state
      Value: "{E93E190F-3398-489D-B3A3-A3B0D9BB33C5}"
    - ID: "45ce257a-6060-4c4a-9a0f-ae77bf705b25"
      Hint: TwitterSite
      Value: 
    - ID: "48a66e40-d164-4c8e-bc06-172ecc6769ec"
      Hint: TwitterTitle
      Value: Learn the basics behind a  home automation set up with our Android to Arduino guide.
    - ID: "4c2f221f-9426-45ed-9eeb-c79bb3169565"
      Hint: StickyNotes
      Value: 
    - ID: "4c346442-e859-4efd-89b2-44aedf467d21"
      Hint: __Valid to
      Value: 
    - ID: "4d263b95-322f-4003-adbd-70920facf823"
      Hint: TwitterDescription
      Value: 
    - ID: "4e0720e9-9d50-4ddc-87cf-ecd65e8e94c8"
      Hint: NavigationTitle
      Value: Android to Arduino
    - ID: "528986cc-6ff9-4383-8bee-514f0e8172cf"
      Hint: MetaDescription
      Value: "Have you always dreamed of automating your home? Do you want to control the lights, fans, and appliances from your smartphone? Perhaps you just want a tutorial about connected devices and getting started with them? Our DIY home automation project outlined in this article will show you how to automate your home using an Android smartphone and Arduino. "
    - ID: "5a0b08e5-7f6c-48dc-929a-5d6cfda45e1d"
      Hint: Content
      Value: |
        Avez-vous toujours rêvé d'automatiser votre maison? Voulez-vous contrôler les lumières, les ventilateurs et les appareils de votre téléphone intelligent? Peut-être que vous voulez simplement un didacticiel au sujet des appareils branchés et commencer avec eux? Notre projet domotique décrit dans cet article vous montrera comment automatiser votre maison en utilisant un téléphone intelligent Android et un module Arduino. Cela ne nécessite aucune expérience avec la programmation Android. Ce système utilise Bluetooth pour se relier à votre appareil et contrôler les différents appareils de votre maison. Amusez-vous avec ce tutoriel de piratage domotique.<br /><div><br /></div><div><span style="font-size: 20px;"><b>Matériaux Requis</b>:</span><br /></div><div>Arduino ou équivalent</div><div>Module Bluetooth 5v TTL -UART tel : JY-MCU BT_BOARD or Bluesmirf Gold/Silver.</div><div>5 relais 5V SPDT tel que: 5V relay.</div><div>Panneau prototype or planche à pain.</div><div>fils de connexion.</div><div><br /></div><div>Logiciel:</div><div>Arduino IDE</div><div>Eclipse pour programmation Android (facultatif).</div><div><br /></div><div><b>Comment ça fonctionne?</b></div><div>Notre projet domotique Android to Arduino est livré avec une application gratuite appelée "DIY SmartHome". Cette application contrôle les différents appareils reliés à votre Arduino et à vos relais. Lorsque vous appuyez sur les boutons à bascule de l'application, les signaux Bluetooth correspondants sont envoyés de votre téléphone Android au module Bluetooth que vous avez branché à votre Arduino. L'Arduino trouve le signal qui a été envoyé et le compare aux signaux prédéfinis assignés à chaque appareil. Quand il identifie ce signal, l'Arduino active le relais relié à sa broche numérique en passant 5V à travers lui. Ainsi, le relais est activé et l'appareil correspondant connecté au relais est également activé. Pour l'éteindre, Arduino passe un 0V ou logique bas à sa broche numérique.<br /></div><div><br /></div><div>For setting up this system, wiring connections have to be made between the Arduino and Bluetooth module and also with the relays. Here, the Bluetooth Module’s Tx is connected to Arduino Rx (digital pin 0) and the module’s Rx to Arduino Tx (digital pin 1). 5V and GND of the module are connected to the Arduino’s 5V and GND.</div><div><br /></div><div>The relay you're using is SPDT; it has 5 pins on the underside. Pins 1 and 3 are the coil pins. Pin 1 is connected to the Arduino digital pin and pin 3 is connected to Arduino GND. Pin 2 is the common contact in the relay to which you have to connect the power for your appliance (AC 230V), and pin 4 is the pin to which you have to connect your appliance wire.</div><div><br /></div><div>In a normal SPDT relay, whose pin out is shown in the above step, pins 2 and 4 act identical to the two terminals of a switch. When a digital HIGH voltage is applied from the Arduino to the relay, the switch turns ON, when the voltage is withdrawn, it turns OFF. You can attach this system you made to a normal switchboard by extending the wires from behind the switches in the board to your relay. As seen in the connection diagram in the above step, you have to connect a power AC line to the common terminal of all the relays. Then, you have to extend the wires from behind the switchboard of the corresponding lights/lamps you wish to control. Each of these wires is connected to the “NO”(Normally Open) terminal of the relays. NOTE: If you wish to control door locks, you may use door lock solenoids, which can be purchased and connected to your system and turned ON/OFF using the same way.&nbsp;</div><div><br /></div><div><b>Loading the Arduino Software</b></div><div><span style="font-size: 20px;">If you are new to Arduino, download the Arduino IDE (Integrated Development Environment) from Arduino. The code is really simple: here it checks the incoming Bluetooth signal via the Bluetooth module and then compares using an “if” statement with previously defined values. If it matches the value, the relay is activated using the “digitalWrite(</span>pin,HIGH<span style="font-size: 20px;">)” command, which passes 5V to the Arduino digital pin. Then, upload the code to your Arduino board.</span><br /></div><div><br /></div><div><b>Discovering New Bluetooth Devices</b></div><div><span style="font-size: 20px;">To download the android application to your phone, copy this .apk file to your phone from the PC and then click on it from the phone to install it. Be sure to check “Allow installation of non-Market apps” in the Security tab under settings. Once you have installed the application, before opening it you need to pair and connect to your Bluetooth module. For this, you need to power the Arduino and Bluetooth module and then turn ON the Bluetooth of your phone and make it visible to other devices. After that, search for new devices in Bluetooth, select your Bluetooth module from the list, enter the pairing code when prompted, it is usually '1234'&nbsp; or '0000'.</span><br /></div><div><br /></div><div>Note the name of your device, in this case, it is HC-06. After pairing with the system, go to the application and enter the name of your Bluetooth module you noted earlier (case-sensitive). After that, the phone will connect to your system, and by clicking the respective buttons, the appliances turn ON/OFF. Have fun with your new Android to Arduino home automation set up.</div>
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\admin
    - ID: "5e650555-c7f0-456a-8185-f69388169cbc"
      Hint: MetaKeywords
      Value: android to arduino, home automation, diy automation, beginner arduino, smart home, bluetooth, connected devices
    - ID: "700f4aad-ad3b-4058-8673-a0cee765a1f7"
      Hint: __Content Test
      Value: 
    - ID: "7bddc8b8-1f77-46d8-9d7f-46e20e041f74"
      Hint: OpenGraphDescription
      Value: "Have you always dreamed of automating your home? Do you want to control the lights, fans, and appliances from your smartphone? Perhaps you just want a tutorial about connected devices and getting started with them? Our DIY home automation project outlined in this article will show you how to automate your home using an Android smartphone and Arduino. "
    - ID: "7d988161-3991-465a-a88c-280bc65542a0"
      Hint: OpenGraphTitle
      Value: Home Automation with Android and Arduino
    - ID: "82f4bd76-0837-4e55-a1f6-15231096b2b9"
      Hint: Attributes
      Value: 
    - ID: "a14f1b0c-4384-49ec-8790-28a440f3670c"
      Hint: __Semantics
      Type: Multilist with Search
      Value: 
    - ID: "a3555ef5-6619-441d-b4db-da3fd5f9c770"
      Hint: Navigation Image
      Value: 
    - ID: "b8f42732-9cb8-478d-ae95-07e25345fb0f"
      Hint: __Hide version
      Type: checkbox
      Value: 0
    - ID: "c8f93afe-bfd4-4e8f-9c61-152559854661"
      Hint: __Valid from
      Value: 
    - ID: "ca65aca5-4323-418a-aa72-a5037f606d2a"
      Hint: Introduction
      Value: "Avez-vous toujours r&ecirc;v&eacute; d'automatiser votre maison? Voulez-vous contr&ocirc;ler les lumi&egrave;res, les ventilateurs et les appareils de votre t&eacute;l&eacute;phone intelligent? Peut-&ecirc;tre que vous voulez simplement un didacticiel au sujet des appareils branch&eacute;s et commencer avec eux? Notre projet domotique d&eacute;crit dans cet article vous montrera comment automatiser votre maison en utilisant un t&eacute;l&eacute;phone intelligent Android et un module Arduino."
    - ID: "d8b38dd7-e9a0-4410-9f17-d436b0c8635a"
      Hint: OpenGraphImageUrl
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "dd05144a-bd66-4ea3-956a-4b7104daaba3"
      Hint: Link
      Value: 
    - ID: "de457091-0989-414e-addf-59db0ddb6690"
      Hint: TwitterImage
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "e2a634fd-5177-46de-b629-5393caed77d7"
      Hint: Title
      Value: Automatisation avec Android et Arduino 
- Language: "ja-JP"
  Fields:
  - ID: "b5e02ad9-d56f-4c41-a065-a133db87bdeb"
    Hint: __Display name
    Value: Android から Arduino
  Versions:
  - Version: 1
    Fields:
    - ID: "23aa5741-fa6a-4add-9e79-7a752af6deb1"
      Hint: Image
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20180321T104443Z
    - ID: "3e431de1-525e-47a3-b6b0-1ccbec3a8c98"
      Hint: __Workflow state
      Value: "{E93E190F-3398-489D-B3A3-A3B0D9BB33C5}"
    - ID: "48a66e40-d164-4c8e-bc06-172ecc6769ec"
      Hint: TwitterTitle
      Value: Learn the basics behind a  home automation set up with our Android to Arduino guide.
    - ID: "4e0720e9-9d50-4ddc-87cf-ecd65e8e94c8"
      Hint: NavigationTitle
      Value: Android から Arduino
    - ID: "528986cc-6ff9-4383-8bee-514f0e8172cf"
      Hint: MetaDescription
      Value: "Have you always dreamed of automating your home? Do you want to control the lights, fans, and appliances from your smartphone? Perhaps you just want a tutorial about connected devices and getting started with them? Our DIY home automation project outlined in this article will show you how to automate your home using an Android smartphone and Arduino. "
    - ID: "5a0b08e5-7f6c-48dc-929a-5d6cfda45e1d"
      Hint: Content
      Value: |
        <div><span style="font-size: 20px;">Have you always dreamed of automating your home? Do you want to control the lights, fans, and appliances from your smartphone? Perhaps you just want a tutorial about connected devices and getting started with them? Our DIY home automation project outlined in this article will show you how to automate your home using an Android smartphone and Arduino. This requires no experience with Android programming. This system uses Bluetooth to </span>connect to<span style="font-size: 20px;"> your device and control the various appliances in your home. Have fun with this home automation hacking tutorial.</span><br /></div><div><br /></div><div><b>Required Materials</b></div><div><span style="font-size: 20px;">Hardware:</span><br /></div><div>Arduino / Arduino Clone</div><div>A 5v TTL -UART Bluetooth module like: JY-MCU BT_BOARD or Bluesmirf Gold/Silver.</div><div>Five 5V SPDT relays like: 5V relay.</div><div>Prototype board or breadboard.</div><div>Connecting wires.</div><div><br /></div><div>Software:</div><div>Arduino IDE</div><div>Eclipse for Android programming (optional, not required).</div><div><br /></div><div><b>How Does it Work?</b></div><div><span style="font-size: 20px;">Our Android to Arduino home automation project comes with a free application called “DIY SmartHome.” This application controls the various appliances connected to your Arduino and relays. When the toggle buttons on the application are pressed, corresponding Bluetooth signals are sent from your Android phone to the Bluetooth module you have hooked up to your Arduino. The Arduino finds out which signal was sent and compares it to the predefined signals assigned for each appliance. When it identifies that signal, the Arduino activates the relay hooked up to its digital pin by passing 5V through it. Thus the relay is switched ON and the corresponding appliance connected to the relay is turned ON as well. To switch it OFF, Arduino passes a 0V or logic low to its digital pin.</span><br /></div><div><br /></div><div>For setting up this system, wiring connections have to be made between the Arduino and Bluetooth module and also with the relays. Here, the Bluetooth Module’s Tx is connected to Arduino Rx (digital pin 0) and the module’s Rx to Arduino Tx (digital pin 1). 5V and GND of the module are connected to the Arduino’s 5V and GND.</div><div><br /></div><div>The relay you're using is SPDT; it has 5 pins on the underside. Pins 1 and 3 are the coil pins. Pin 1 is connected to the Arduino digital pin and pin 3 is connected to Arduino GND. Pin 2 is the common contact in the relay to which you have to connect the power for your appliance (AC 230V), and pin 4 is the pin to which you have to connect your appliance wire.</div><div><br /></div><div>In a normal SPDT relay, whose pin out is shown in the above step, pins 2 and 4 act identical to the two terminals of a switch. When a digital HIGH voltage is applied from the Arduino to the relay, the switch turns ON, when the voltage is withdrawn, it turns OFF. You can attach this system you made to a normal switchboard by extending the wires from behind the switches in the board to your relay. As seen in the connection diagram in the above step, you have to connect a power AC line to the common terminal of all the relays. Then, you have to extend the wires from behind the switchboard of the corresponding lights/lamps you wish to control. Each of these wires is connected to the “NO”(Normally Open) terminal of the relays. NOTE: If you wish to control door locks, you may use door lock solenoids, which can be purchased and connected to your system and turned ON/OFF using the same way.&nbsp;</div><div><br /></div><div><b>Loading the Arduino Software</b></div><div><span style="font-size: 20px;">If you are new to Arduino, download the Arduino IDE (Integrated Development Environment) from Arduino. The code is really simple: here it checks the incoming Bluetooth signal via the Bluetooth module and then compares using an “if” statement with previously defined values. If it matches the value, the relay is activated using the “digitalWrite(</span>pin,HIGH<span style="font-size: 20px;">)” command, which passes 5V to the Arduino digital pin. Then, upload the code to your Arduino board.</span><br /></div><div><br /></div><div><b>Discovering New Bluetooth Devices</b></div><div><span style="font-size: 20px;">To download the android application to your phone, copy this .apk file to your phone from the PC and then click on it from the phone to install it. Be sure to check “Allow installation of non-Market apps” in the Security tab under settings. Once you have installed the application, before opening it you need to pair and connect to your Bluetooth module. For this, you need to power the Arduino and Bluetooth module and then turn ON the Bluetooth of your phone and make it visible to other devices. After that, search for new devices in Bluetooth, select your Bluetooth module from the list, enter the pairing code when prompted, it is usually '1234'&nbsp; or '0000'.</span><br /></div><div><br /></div><div>Note the name of your device, in this case, it is HC-06. After pairing with the system, go to the application and enter the name of your Bluetooth module you noted earlier (case-sensitive). After that, the phone will connect to your system, and by clicking the respective buttons, the appliances turn ON/OFF. Have fun with your new Android to Arduino home automation set up.</div>
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\admin
    - ID: "5e650555-c7f0-456a-8185-f69388169cbc"
      Hint: MetaKeywords
      Value: android to arduino, home automation, diy automation, beginner arduino, smart home, bluetooth, connected devices
    - ID: "7bddc8b8-1f77-46d8-9d7f-46e20e041f74"
      Hint: OpenGraphDescription
      Value: あなたはいつも自宅を自動化することを夢見てきましたか？ スマートフォンからライト、ファン、アプライアンスを制御しますか？ おそらく、接続されたデバイスに関するチュートリアルが必要なだけで、それらのデバイスを使い始めることができますか？ この記事で紹介したDIYホームオートメーションプロジェクトでは、AndroidスマートフォンとArduinoを使用して自宅を自動化する方法を紹介します。
    - ID: "7d988161-3991-465a-a88c-280bc65542a0"
      Hint: OpenGraphTitle
      Value: Android と Arduino のホームオートメーション
    - ID: "ca65aca5-4323-418a-aa72-a5037f606d2a"
      Hint: Introduction
      Value: あなたはいつも自宅を自動化することを夢見てきましたか？ あなたはスマートフォンからライト、ファン、アプライアンスをコントロールしたいですか？この記事で概説しているDIYのホームオートメーションプロジェクトでは、AndroidスマートフォンとArduinoを使って自宅を自動化する方法を紹介します。&nbsp;
    - ID: "d8b38dd7-e9a0-4410-9f17-d436b0c8635a"
      Hint: OpenGraphImageUrl
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "de457091-0989-414e-addf-59db0ddb6690"
      Hint: TwitterImage
      Value: |
        <image mediaid="{59B6594A-9859-4BC7-897D-A76A756B7893}" alt="android to arduino" height="" width="" hspace="" vspace="" />
    - ID: "e2a634fd-5177-46de-b629-5393caed77d7"
      Hint: Title
      Value: Android と Arduino のホームオートメーション

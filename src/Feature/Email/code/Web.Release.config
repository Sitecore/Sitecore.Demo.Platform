<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
    <appSettings>
        <add key="Telerik.AsyncUpload.ConfigurationEncryptionKey" value="6YXEG7IH4XYNKdt772p2ni6nbeDT772P2NI6NBE4@" xdt:Locator="Match(key)" xdt:Transform="SetAttributes(value)" />
        <add key="Telerik.Upload.ConfigurationHashKey" value="6YXEG7IH4XYNKdt772p2ni6nbeDT772P2NI6NBE4@" xdt:Locator="Match(key)" xdt:Transform="SetAttributes(value)" />
        <add key="Telerik.Web.UI.DialogParametersEncryptionKey" value="6YXEG7IH4XYNKdt772p2ni6nbeDT772P2NI6NBE4@" xdt:Locator="Match(key)" xdt:Transform="SetAttributes(value)" />
        <add key="search:define" value="Azure" xdt:Locator="Match(key)" xdt:Transform="SetAttributes(value)" />
        <add key="AllowInvalidClientCertificates" value="True" xdt:Locator="Match(key)" xdt:Transform="SetAttributes(value)" />
        <add key="owin:AutomaticAppStartup" value="true" xdt:Transform="InsertIfMissing" xdt:Locator="Match(key)" />
        <add key="env:define" value="Production" xdt:Transform="InsertIfMissing" xdt:Locator="Match(key)" />
    </appSettings>
    <system.webServer>
        <modules runAllManagedModulesForAllRequests="true">
            <add type="Sitecore.Resources.Media.UploadWatcher, Sitecore.Kernel" name="SitecoreUploadWatcher" xdt:Locator="Match(type)" xdt:Transform="Remove" />
            <remove name="ApplicationInsightsWebTracking" xdt:Transform="InsertIfMissing" />
            <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" xdt:Transform="InsertIfMissing" />
            <remove name="FormsAuthentication" xdt:Transform="InsertIfMissing" />
        </modules>
        <handlers>
            <add verb="*" path="sitecore_media.ashx" type="Sitecore.XA.Foundation.MediaRequestHandler.MediaRequestHandler, Sitecore.XA.Foundation.MediaRequestHandler" name="Sitecore.MediaRequestHandler" xdt:Locator="Match(name)" xdt:Transform="SetAttributes(type)" />
        </handlers>
        <rewrite xdt:Transform="InsertIfMissing">
            <rules>
                <rule name="Root Hit Force HTTPS Redirection" enabled="true" stopProcessing="true">
                    <match url="^$" ignoreCase="false" />
                    <conditions>
                        <add input="{HTTPS}" pattern="^OFF$" />
                        <add input="{HTTP_METHOD}" pattern="GET" />
                    </conditions>
                    <action type="Redirect" url="https://{HTTP_HOST}/" redirectType="Permanent" />
                </rule>
                <rule name="Sitecore Login or Admin Force HTTPS Redirection" enabled="true" stopProcessing="true">
                    <match url="^(sitecore/(login|admin))$" />
                    <conditions>
                        <add input="{HTTPS}" pattern="^OFF$" />
                        <add input="{HTTP_METHOD}" pattern="GET" />
                    </conditions>
                    <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" appendQueryString="true" redirectType="Permanent" />
                </rule>
                <rule name="Forbidden" enabled="true" stopProcessing="true">
                    <match url="(.*)" />
                    <conditions>
                        <add input="{HTTPS}" pattern="^OFF$" />
                        <add input="{HTTP_METHOD}" pattern="GET" />
                    </conditions>
                    <action type="CustomResponse" statusCode="403" subStatusCode="0" />
                </rule>
            </rules>
        </rewrite>
    </system.webServer>
    <system.web>
        <customErrors mode="Off" xdt:Transform="Replace" />
        <authentication mode="None" xdt:Transform="Replace" />
        <httpModules xdt:Transform="InsertIfMissing">
            <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" />
        </httpModules>
    </system.web>
    <runtime>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">                    
            <dependentAssembly xdt:Transform="InsertIfMissing" xdt:Locator="Condition(./_defaultNamespace:assemblyIdentity/@name='Microsoft.AI.Agent.Intercept')">
                <assemblyIdentity name="Microsoft.AI.Agent.Intercept" publicKeyToken="31bf3856ad364e35" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-2.0.7.0" newVersion="2.0.7.0" />
            </dependentAssembly>                                                                
            <dependentAssembly xdt:Transform="InsertIfMissing" xdt:Locator="Condition(./_defaultNamespace:assemblyIdentity/@name='Microsoft.ApplicationInsights')">
                <assemblyIdentity name="Microsoft.ApplicationInsights" publicKeyToken="31bf3856ad364e35" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-2.3.0.0" newVersion="2.3.0.0" />
            </dependentAssembly>
            
            <dependentAssembly xdt:Transform="InsertIfMissing" xdt:Locator="Condition(./_defaultNamespace:assemblyIdentity/@name='Microsoft.Xrm.Sdk')">
                <assemblyIdentity name="Microsoft.Xrm.Sdk" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
                <bindingRedirect oldVersion="0.0.0.0-8.0.0.0" newVersion="8.0.0.0"/>
            </dependentAssembly>
            <dependentAssembly xdt:Transform="InsertIfMissing" xdt:Locator="Condition(./_defaultNamespace:assemblyIdentity/@name='Microsoft.Crm.Sdk.Proxy')">
                <assemblyIdentity name="Microsoft.Crm.Sdk.Proxy" publicKeyToken="31bf3856ad364e35" culture="neutral" />
                <bindingRedirect oldVersion="0.0.0.0-8.0.0.0" newVersion="8.0.0.0" />
            </dependentAssembly>
        </assemblyBinding>      
    </runtime>
    <system.diagnostics xdt:Transform="InsertAfter(/configuration/system.serviceModel)">
        <trace autoflush="true" indentsize="0">
            <listeners>
                <add name="myAppInsightsListener" type="Microsoft.ApplicationInsights.TraceListener.ApplicationInsightsTraceListener, Microsoft.ApplicationInsights.TraceListener" />
            </listeners>
        </trace>
    </system.diagnostics>
</configuration>
services:
  traefik:
    volumes:
      - ./data/traefik:C:/etc/traefik
    depends_on:
      cd:
        condition: service_healthy
    networks:
      - demo

  # Mount our SQL data folder
  mssql:
    mem_limit: 2GB
    volumes:
      - type: bind
        source: .\data\mssql-data
        target: c:\data
    networks:
      - demo

  # Custom mssql init
  mssql-init:
    image: ${REGISTRY}demo/lighthouse-xp0-mssql-init:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    environment:
      SQL_SERVER: ${SQL_SERVER}
      SQL_ADMIN_LOGIN: ${SQL_SA_LOGIN}
      SQL_ADMIN_PASSWORD: ${SQL_SA_PASSWORD}
      SQL_DATABASE_PREFIX: ${SQL_DATABASE_PREFIX}
      SQL_CUSTOM_DATABASE_PREFIX_UPDATE_FROM: ${SQL_CUSTOM_DATABASE_PREFIX_UPDATE_FROM}
      SITECORE_ADMIN_USERNAME: "sitecore\\superuser"
      SITECORE_ADMIN_PASSWORD: ${SITECORE_ADMIN_PASSWORD}
      SITECORE_USER_PASSWORD: ${SITECORE_ADMIN_PASSWORD}
      EXM_BASE_URL: https://${CD_HOST}
      POST_DEPLOYMENT_WAIT_PERIOD: 900
    healthcheck:
      test: ["CMD", "powershell", "-command", "if ([System.Environment]::GetEnvironmentVariable('DatabasesDeploymentStatus', 'Machine') -eq 'Complete') { exit 0 } else { exit 1}"]
      start_period: 300s
      interval: 30s
      retries: 100
    depends_on:
      mssql:
        condition: service_healthy
    networks:
      - demo

  # Mount our Solr data folder and use our retagged Solr image.
  # Some modules (like SXA) also require additions to the Solr image.
  solr:
    volumes:
      - type: bind
        source: .\data\solr-data
        target: c:\data
    networks:
      - demo

  # Mount our Solr data folder and use our retagged Solr image.
  # Some modules (like SXA) also require additions to the Solr image.
  solr-init:
    image: ${REGISTRY}demo/lighthouse-xp0-solr-init:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    networks:
      - demo

  id:
    image: ${REGISTRY}demo/lighthouse-id:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      Sitecore_Sitecore__IdentityServer__Clients__CredentialsClient__ClientSecrets__TenantService: ${SITECORE_CLIENT_SECRET}
    networks:
      - demo

  cm:
    image: ${REGISTRY}demo/lighthouse-xp0-cm:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    entrypoint: powershell.exe -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1 -WatchDirectoryParameters @{ Path = 'C:\\src'; Destination = 'C:\\inetpub\\wwwroot'; ExcludeFiles = @('C:\\src\\Web.config'); }"
    mem_limit: 4G
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      SITECORE_APPSETTINGS_SXAXM:DEFINE: sxaxconnect
      SITECORE_APPSETTINGS_ENV:DEFINE: Docker
      SITECORE_APPSETTINGS_UNICORN:DEFINE: Enabled
      SITECORE_APPSETTINGS_CONTENTHUB:DEFINE: Enabled
      SITECORE_CONNECTIONSTRINGS_CMP.ContentHub: ${CMP_CONTENTHUB}
      SITECORE_CONNECTIONSTRINGS_CMP.ServiceBusEntityPathIn: ${CMP_SERVICEBUSENTITYPATHIN}
      SITECORE_CONNECTIONSTRINGS_CMP.ServiceBusSubscription: ${CMP_SERVICEBUSSUBSCRIPTION}
      SITECORE_CONNECTIONSTRINGS_CMP.ServiceBusEntityPathOut: ${CMP_SERVICEBUSENTITYPATHOUT}
      SITECORE_CONNECTIONSTRINGS_DAM.ContentHub: URI=${DAM_URL}
      SITECORE_CONNECTIONSTRINGS_DAM.SearchPage: ${DAM_URL}/en-us/sitecore-dam-connect/approved-assets
      SITECORE_CONNECTIONSTRINGS_Sitecore.Services.Token.SecurityKey: key=${SITECORE_SERVICES_TOKEN_SECURITYKEY}
      EXM_RENDERER_URL: http://cm
      HOST_CD: http://cd
      OPENCALAIS_ACCESSTOKEN: ${OPENCALAIS_ACCESSTOKEN}
      DEPENDENCY_INJECTION_IGNORED_ASSEMBLIES: ${DEPENDENCY_INJECTION_IGNORED_ASSEMBLIES}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
      - .\items:c:\items
      - .\data\cm\src:C:\src
      - .\data\cm\backup:c:\backup
    depends_on:
      id:
        condition: service_healthy
      xconnect:
        condition: service_healthy
    networks:
      demo:
        aliases:
          - "${CM_HOST}"

  xconnect:
    image: ${REGISTRY}demo/lighthouse-xp0-xconnect:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    # TODO: Do we need a specific xConnect entrypoint like in 9.3?
    entrypoint: powershell.exe -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1 -WatchDirectoryParameters @{ Path = 'C:\\src'; Destination = 'C:\\inetpub\\wwwroot'; ExcludeFiles = @('Web.config'); }"
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
      - .\data\xconnect\src:C:\src
    environment:
      SITECORE_LICENSE_LOCATION: c:\license
    depends_on:
      mssql-init:
        condition: service_healthy
      solr:
        condition: service_healthy
    networks:
      - demo

  xdbsearchworker:
    image: ${REGISTRY}demo/lighthouse-xp0-xdbsearchworker:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    entrypoint: powershell.exe -Command "& C:\\tools\\entrypoints\\worker\\Development.ps1 -WatchDirectoryParameters @{ Path = 'C:\\src'; Destination = 'C:\\service'; }"
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
      - .\data\indexworker\src:C:\src
    environment:
      SITECORE_LICENSE_LOCATION: c:\license
    networks:
      - demo

  xdbautomationworker:
    image: ${REGISTRY}demo/lighthouse-xp0-xdbautomationworker:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
    environment:
      SITECORE_LICENSE_LOCATION: c:\license
    networks:
      - demo

  cd:
    isolation: ${ISOLATION}
    image: ${REGISTRY}demo/lighthouse-xp0-cd:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    entrypoint: powershell.exe -Command "& C:\\tools\\entrypoints\\iis\\Development.ps1 -WatchDirectoryParameters @{ Path = 'C:\\src'; Destination = 'C:\\inetpub\\wwwroot'; ExcludeFiles = @('Web.config'); }"
    deploy:
      replicas: ${CD_CONTAINERS_COUNT}
    environment:
      SITECORE_LICENSE_LOCATION: c:\license\license.xml
      SITECORE_APPSETTINGS_SXAXM:DEFINE: sxaxconnect
      SITECORE_APPSETTINGS_ENV:DEFINE: Docker
      SITECORE_APPSETTINGS_UNICORN:DEFINE: Disabled
      SOLR_CORE_PREFIX_NAME: ${SOLR_CORE_PREFIX_NAME}
      Sitecore_ConnectionStrings_Security: Data Source=mssql;Initial Catalog=Sitecore.Core;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Web: Data Source=mssql;Initial Catalog=Sitecore.Web;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Messaging: Data Source=mssql;Initial Catalog=Sitecore.Messaging;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_ExperienceForms: Data Source=mssql;Initial Catalog=Sitecore.ExperienceForms;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Exm.Master: Data Source=mssql;Initial Catalog=Sitecore.Exm.master;User ID=sa;Password=${SQL_SA_PASSWORD}
      Sitecore_ConnectionStrings_Solr.Search: http://solr:8983/solr
      Sitecore_ConnectionStrings_XConnect.Collection: http://xconnect
      Sitecore_ConnectionStrings_Xdb.MarketingAutomation.Operations.Client: http://xconnect
      Sitecore_ConnectionStrings_Xdb.MarketingAutomation.Reporting.Client: http://xconnect
      Sitecore_ConnectionStrings_Xdb.ReferenceData.Client: http://xconnect
      Sitecore_ConnectionStrings_Sitecore.Services.Token.SecurityKey: key=${SITECORE_SERVICES_TOKEN_SECURITYKEY}
      EXM_RENDERER_URL: http://cm
      DEPENDENCY_INJECTION_IGNORED_ASSEMBLIES: ${DEPENDENCY_INJECTION_IGNORED_ASSEMBLIES}
    volumes:
      - ${HOST_LICENSE_FOLDER}:c:\license
      - .\data\cd\src:C:\src
      - .\data\cd\backup:c:\backup
    depends_on:
      mssql-init:
        condition: service_healthy
      solr:
        condition: service_healthy
      xconnect:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "powershell", "ps"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.force-STS-Header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.force-STS-Header.headers.stsSeconds=31536000"
      - "traefik.http.routers.cd-secure.entrypoints=websecure"
      - "traefik.http.routers.cd-secure.rule=Host(`${CD_HOST}`)"
      - "traefik.http.routers.cd-secure.tls=true"
      - "traefik.http.routers.cd-secure.middlewares=force-STS-Header"
    networks:
      demo:
        aliases:
          - "${CD_HOST}"

  smtp:
    image: rnwood/smtp4dev
    isolation: ${SMTP_ISOLATION}
    ports:
      - "44025:25"
      - "44026:80"
    networks:
      - demo
    deploy:
      replicas: ${SMTP_CONTAINERS_COUNT}

  init:
    healthcheck:
      test: ["CMD", "powershell", "ps"]
    image: ${REGISTRY}demo/lighthouse-init:${SITECORE_VERSION}-${WINDOWSSERVERCORE_VERSION}-${DEMO_VERSION}
    isolation: ${ISOLATION}
    environment:
      ADMIN_PASSWORD: ${SITECORE_ADMIN_PASSWORD}
      ADMIN_USER_NAME: "superuser"
      HOST_CD: "http://cd"
      HOST_CM: "http://cm"
      HOST_ID: "http://id"
      MARKETING_DEFINITIONS_APIKEY: ${MARKETING_DEFINITIONS_APIKEY}
      SKIP_WARMUP_CD: ${SKIP_WARMUP_CD}
      INIT_CONTEXT: Data Source=mssql;Initial Catalog=platform_init_ready;User ID=sa;Password=${SQL_SA_PASSWORD}
    depends_on:
      mssql-init:
        condition: service_healthy
      cm:
        condition: service_healthy
    networks:
      - demo

networks:
  demo:
    external: true
    name: nat
